from flask import Flask, request, jsonify
import tensorflow as tf
import numpy as np
from tensorflow.keras.preprocessing import image
import firebase_admin
from firebase_admin import credentials, db

# Load Model
model = tf.keras.models.load_model("model/weed_detector.h5")

# Initialize Firebase
cred = credentials.Certificate("backend/firebase_credentials.json")
firebase_admin.initialize_app(cred, {"databaseURL": "YOUR_FIREBASE_DB_URL"})

app = Flask(__name__)

def preprocess(img_path):
    img = image.load_img(img_path, target_size=(224, 224))
    img_array = image.img_to_array(img) / 255.0
    img_array = np.expand_dims(img_array, axis=0)
    return img_array

@app.route("/predict", methods=["POST"])
def predict():
    file = request.files["image"]
    file_path = "temp.jpg"
    file.save(file_path)
    
    img = preprocess(file_path)
    preds = model.predict(img)
    class_index = np.argmax(preds)
    
    ref = db.reference(f"recommendations/{class_index}")
    recommendation = ref.get()

    return jsonify({"class": int(class_index), "recommendation": recommendation})

if __name__ == "__main__":
    app.run(debug=True)
